const { apigateway } = require('./aws.js');
const logger = require('./log.js')('apikey');
const { wait, isDryrun } = require('./util.js');

const generateApiKeys = async (restApiId, apiKeyDefinitions) => {
  const params = {
    includeValues: true,
    limit: 500
  };
  const { items: remoteKeys } = await apigateway.getApiKeys(params).promise();
  await wait(1);
  for (let i = 0; i < apiKeyDefinitions.length; i++) {
    const def = apiKeyDefinitions[i];
    const exists = remoteKeys.find(key => def.name === key.name);
    if (exists) {
      console.log(`ApiKey name of ${def.name} already exists. skip to create`);
      continue;
    }
    const input = {
      description: def.description || '',
      enabled: true,
      generateDistinctId: true,
      name: def.name,
      tags: {
        Name: def.tag || 'generated by esanuka',
      },
      value: def.value,
    };
    if (isDryrun()) {
      logger(`Create new Apikey ${def.name}`, input);
    } else {
      await apigateway.createApiKey(input).promise();
      await wait(1);
    }
  }
};

module.exports = {
  generateApiKeys,
};
